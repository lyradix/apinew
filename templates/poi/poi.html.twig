{% extends 'base.html.twig' %}

{% block title %}Hello IndexController!{% endblock %}

{% block body %}
<a href="{{ path('app_adminConcerts') }}" class="btn btn-success"> 
    <img class="logoXtra" src="{{ asset('images/preview.png') }}" alt="logo">
</a>
<h1>Ajouter ou modifier un lieu</h1>

<div>
    <label>
        <input type="radio" name="formMode" value="add" checked>
        Ajouter
    </label>
    <label>
        <input type="radio" name="formMode" value="modify">
        Modifier
    </label>
</div>

<div id="addForm" class="form">
    <form id="poiForm" action="{{ path('post_poi') }}" method="post">
        {{ form_widget(formAddPoi) }}
        <button type="submit">Envoyer</button>
    </form>
</div>
<div id="modifyForm" class="form" style="display:none;"></div>

<script>
document.querySelectorAll('input[name="formMode"]').forEach(function(radio) {
    radio.addEventListener('change', function() {
        if (this.value === 'add') {
            document.getElementById('addForm').style.display = '';
            document.getElementById('modifyForm').style.display = 'none';
        } else if (this.value === 'modify') {
            document.getElementById('addForm').style.display = 'none';
            // Only fetch the modify form when needed
            fetch('{{ path("app_render_updatePoi") }}')
                .then(response => response.text())
                .then(html => {
                    document.getElementById('modifyForm').innerHTML = html;
                    document.getElementById('modifyForm').style.display = '';
                });
        }
    });
});

// Handle AJAX POST for add form when type is "scène"
document.getElementById('poiForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    const typeField = form.querySelector('[name$="[type]"]');
    const type = typeField ? typeField.value : '';

    if (type === 'scène') {
        fetch('{{ path("app_postScene") }}', {
            method: 'POST',
            body: formData,
            headers: { 'X-Requested-With': 'XMLHttpRequest' }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Scène ajoutée avec succès !');
                form.reset();
            } else {
                alert('Erreur : ' + (data.error || 'Une erreur est survenue.'));
            }
        })
        .catch(() => alert('Erreur lors de l\'envoi du formulaire.'));
    } else {
        form.submit(); // fallback for other types
    }
});
</script>
{% endblock %}