security:
    # Password hashing configuration
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User provider configuration
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            stateless: true # Stateless for token-based authentication
            json_login:
                check_path: /login
                username_path: email
                password_path: password
            logout:
                path: /logout

    # Access control rules
    access_control:
        - { path: ^/login, roles: ROLE_ADMIN}
        - { path: ^/getdays, roles: ROLE_USER }
        - { path: ^/postdays, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon